---
import Layout from '../layouts/Layout.astro';
import ProjectCard from '../components/ProjectCard.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

// Fetch and sort projects by publication date
const allProjects = await getCollection('projects');
const featuredProjects = allProjects.filter(project => project.data.featured);
const regularProjects = allProjects.filter(project => !project.data.featured);

// Sort projects by date (newest first)
const sortByDate = (a: CollectionEntry<'projects'>, b: CollectionEntry<'projects'>) => 
  b.data.pubDate.valueOf() - a.data.pubDate.valueOf();
const sortedFeatured = featuredProjects.sort(sortByDate);
const sortedRegular = regularProjects.sort(sortByDate);
---

<Layout title="Projects | Njerii">
  <div class="container">
    <h1 class="title">Projects</h1>
    <p class="subtitle">A showcase of my work in Rust, blockchain, and web development</p>
    
    {sortedFeatured.length > 0 && (
      <div class="featured-section">
        <h2 class="section-title">Featured Projects</h2>
        <div class="projects-grid featured">
          {sortedFeatured.map(project => (
            <ProjectCard
              title={project.data.title}
              description={project.data.description}
              pubDate={project.data.pubDate}
              tags={project.data.tags}
              url={`/projects/${project.slug}`}
              github={project.data.github}
              demo={project.data.demo}
              image={project.data.image}
            />
          ))}
        </div>
      </div>
    )}
    
    <div class="projects-section">
      {sortedFeatured.length > 0 && <h2 class="section-title">All Projects</h2>}
      <div class="projects-grid">
        {sortedRegular.map(project => (
          <ProjectCard
            title={project.data.title}
            description={project.data.description}
            pubDate={project.data.pubDate}
            tags={project.data.tags}
            url={`/projects/${project.slug}`}
            github={project.data.github}
            demo={project.data.demo}
            image={project.data.image}
          />
        ))}
      </div>
    </div>
    
    {allProjects.length === 0 && (
      <div class="empty-state">
        <p>No projects added yet. Check back soon!</p>
      </div>
    )}
  </div>
</Layout>

<style>
  .container {
    padding: 2rem 0;
  }

  .title {
    font-size: 3rem;
    margin-bottom: 0.5rem;
    color: var(--rust-color);
    text-align: center;
  }

  .subtitle {
    text-align: center;
    color: var(--accent-brown);
    font-size: 1.2rem;
    margin-bottom: 3rem;
  }

  .section-title {
    font-size: 2rem;
    color: var(--rust-color);
    margin-bottom: 1.5rem;
  }

  .featured-section {
    margin-bottom: 3rem;
  }

  .projects-grid {
    display: grid;
    gap: 2rem;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  }

  .projects-grid.featured {
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  }

  .empty-state {
    text-align: center;
    padding: 3rem;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 8px;
  }

  .empty-state p {
    font-size: 1.2rem;
    color: var(--accent-brown);
  }

  @media (max-width: 768px) {
    .title {
      font-size: 2.5rem;
    }

    .projects-grid.featured {
      grid-template-columns: 1fr;
    }
  }
</style> 